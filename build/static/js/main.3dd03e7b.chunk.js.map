{"version":3,"sources":["SignIn.js","todoform.js","todolist.js","title.js","todoapp.js","greet.js","loginControl.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","SignIn","classes","Container","component","maxWidth","CssBaseline","className","Avatar","Typography","variant","noValidate","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","type","FormControlLabel","control","Checkbox","value","color","Grid","container","item","xs","Link","href","TodoForm","todoRef","React","createRef","addItemOnList","e","preventDefault","todoItem","todo","current","isCompleted","props","addToDoItems","currentTarget","reset","onSubmit","this","ref","Component","TodoList","handleChange","event","updateTodo","todoItems","console","log","updateTodos","index","toggleCheckbox","checked","onChange","onClick","removeToDoItem","Title","style","headerStyle","background","textAlign","padding","Todo","state","items","Date","now","setState","todos","key","updatedTodo","Object","keys","map","UserGreeting","GuestGreeting","Greeting","isLoggedIn","ReactDOM","render","document","getElementById","LoginButton","Button","LogoutButton","LoginControl","handleLoginClick","bind","handleLogoutClick","button","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"yWAiBMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,MAAO,CACLC,UAAWF,EAAMG,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdC,OAAQ,CACNC,OAAQR,EAAMG,QAAQ,GACtBM,gBAAiBT,EAAMU,QAAQC,UAAUC,MAE3CC,KAAM,CACJC,MAAO,OACPZ,UAAWF,EAAMG,QAAQ,IAE3BY,OAAQ,CACNP,OAAQR,EAAMG,QAAQ,EAAG,EAAG,QAIjB,SAASa,IACtB,IAAMC,EAAUnB,IAEhB,OACE,eAACoB,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAArC,UACE,cAACC,EAAA,EAAD,IACA,sBAAKC,UAAWL,EAAQhB,MAAxB,UACE,cAACsB,EAAA,EAAD,CAAQD,UAAWL,EAAQV,OAA3B,SACE,cAAC,IAAD,MAEF,cAACiB,EAAA,EAAD,CAAYL,UAAU,KAAKM,QAAQ,KAAnC,qBAGA,uBAAMH,UAAWL,EAAQJ,KAAMa,YAAU,EAAzC,UACE,cAACC,EAAA,EAAD,CACEF,QAAQ,WACRjB,OAAO,SACPoB,UAAQ,EACRC,WAAS,EACTC,GAAG,QACHC,MAAM,gBACNC,KAAK,QACLC,aAAa,QACbC,WAAS,IAEX,cAACP,EAAA,EAAD,CACEF,QAAQ,WACRjB,OAAO,SACPoB,UAAQ,EACRC,WAAS,EACTG,KAAK,WACLD,MAAM,WACNI,KAAK,WACLL,GAAG,WACHG,aAAa,qBAEf,cAACG,EAAA,EAAD,CACEC,QAAS,cAACC,EAAA,EAAD,CAAUC,MAAM,WAAWC,MAAM,YAC1CT,MAAM,gBAER,uBAAS,uBACT,eAACU,EAAA,EAAD,CAAMC,WAAS,EAAf,UACE,cAACD,EAAA,EAAD,CAAME,MAAI,EAACC,IAAE,EAAb,SACE,cAACC,EAAA,EAAD,CAAMC,KAAK,IAAIrB,QAAQ,QAAvB,gCAIF,cAACgB,EAAA,EAAD,CAAME,MAAI,EAAV,SACE,cAACE,EAAA,EAAD,CAAMC,KAAK,IAAIrB,QAAQ,QAAvB,SACG,2CAKT,uBAAS,6B,YClEFsB,G,kNAtBbC,QAAUC,IAAMC,Y,EAEhBC,cAAgB,SAAAC,GACdA,EAAEC,iBACF,IAAMC,EAAW,CACfC,KAAM,EAAKP,QAAQQ,QAAQjB,MAC3BkB,aAAa,GAEf,EAAKC,MAAMC,aAAaL,GACxBF,EAAEQ,cAAcC,S,4CAGlB,WACE,OACE,uBAAM/B,GAAG,gBAAgBgC,SAAUC,KAAKZ,cAAxC,UACE,uBAAOhB,KAAK,OAAOH,KAAK,aAAagC,IAAKD,KAAKf,QAASpB,UAAQ,IAChE,8C,GAjBeqB,IAAMgB,Y,QC8CdC,E,4MA7CbC,aAAe,SAAAC,GACb,IAAMC,EAAU,2BACX,EAAKX,MAAMY,WADA,kBAEbF,EAAMR,cAAc5B,KAAOoC,EAAMR,cAAcrB,QAElDgC,QAAQC,IAAIJ,EAAMR,cAAcrB,OAChC,EAAKmB,MAAMe,YAAY,EAAKf,MAAMgB,MAAOL,I,EAG3CM,eAAiB,SAAAP,GACf,IAAMC,EAAU,2BACX,EAAKX,MAAMY,WADA,kBAEbF,EAAMR,cAAc5B,KAAOoC,EAAMR,cAAcgB,UAElD,EAAKlB,MAAMe,YAAY,EAAKf,MAAMgB,MAAOL,I,4CAG3C,WAAU,IAAD,OACP,OACE,qBAAI/C,UAAWyC,KAAKL,MAAMY,UAAUb,YAAc,OAAS,KAA3D,UACE,uBACEtB,KAAK,WACLH,KAAK,cACL4C,QAASb,KAAKL,MAAMY,UAAUb,YAC9BoB,SAAUd,KAAKY,iBAGjB,uBACExC,KAAK,OACLH,KAAK,OACLO,MAAOwB,KAAKL,MAAMY,UAAUf,KAC5BsB,SAAUd,KAAKI,eAGjB,wBACE7C,UAAU,UACVwD,QAAS,kBAAM,EAAKpB,MAAMqB,eAAe,EAAKrB,MAAMgB,QAFtD,sB,GAnCezB,IAAMgB,WCCvBe,E,4JACF,WACI,OAAO,oBAAIC,MAAOC,EAAX,+B,GAFKjB,aAMdiB,EAAc,CAChBC,WAAW,QACX3C,MAAO,OACP4C,UAAW,SACXC,QAAS,QAKEL,ICkCAM,E,4MA9CbC,MAAQ,CACNjB,UAAW,I,EAGbX,aAAe,SAAAhB,GACb,IAAM6C,EAAK,eAAQ,EAAKD,MAAMjB,WAC9BC,QAAQC,IAAIgB,GACZA,EAAM,OAAD,OAAQC,KAAKC,QAAW/C,EAC7B,EAAKgD,SAAS,CACZrB,UAAWkB,K,EAIfT,eAAiB,SAAApC,GACf,IAAMiD,EAAK,eAAQ,EAAKL,MAAMjB,kBACvBsB,EAAMjD,GACb,EAAKgD,SAAS,CAAErB,UAAWsB,K,EAG7BnB,YAAc,SAACoB,EAAKC,GAClB,IAAMF,EAAK,eAAQ,EAAKL,MAAMjB,WAC9BsB,EAAMC,GAAOC,EACb,EAAKH,SAAS,CAAErB,UAAWsB,K,4CAG7B,WAAU,IAAD,OACP,OACE,sBAAKtE,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAUqC,aAAcI,KAAKJ,eAC7B,6BACGoC,OAAOC,KAAKjC,KAAKwB,MAAMjB,WAAW2B,KAAI,SAAAJ,GAAG,OACxC,cAAC,EAAD,CAEEnB,MAAOmB,EACPvB,UAAW,EAAKiB,MAAMjB,UAAUuB,GAChCd,eAAgB,EAAKA,eACrBN,YAAa,EAAKA,aAJboB,e,GAlCA5B,aCAnB,SAASiC,EAAaxC,GACpB,OACE,gCACE,oBAAIuB,MAAOC,EAAX,wCACA,cAAClE,EAAD,OAKN,IAAMkE,EAAc,CAClBC,WAAW,QACX3C,MAAO,OACP4C,UAAW,SACXC,QAAS,QAGX,SAASc,EAAczC,GACnB,OACE,gCACE,oBAAIlB,MAAM,MAAV,mCACA,cAAC,EAAD,OAKR,SAAS4D,EAAS1C,GAEhB,OADmBA,EAAM2C,WAEhB,cAACF,EAAD,IAGA,cAACD,EAAD,IAGXI,IAASC,OACL,cAACH,EAAD,CAAUC,YAAY,IACtBG,SAASC,eAAe,SAEbL,QCtCf,SAASM,EAAYhD,GACnB,OACE,cAACiD,EAAA,EAAD,CACE7B,QAASpB,EAAMoB,QACf3C,KAAK,SACLV,QAAQ,WACRe,MAAM,UAJR,SAME,cAACK,EAAA,EAAD,CAAML,MAAM,UAAZ,uBAKN,SAASoE,EAAalD,GACpB,OACE,cAACiD,EAAA,EAAD,CACE7B,QAASpB,EAAMoB,QACf3C,KAAK,SACLV,QAAQ,WACRe,MAAM,YAJR,SAME,cAACK,EAAA,EAAD,CAAML,MAAM,UAAZ,sB,IAsCSqE,E,kDAhCb,WAAYnD,GAAQ,IAAD,8BACjB,cAAMA,IACDoD,iBAAmB,EAAKA,iBAAiBC,KAAtB,gBACxB,EAAKC,kBAAoB,EAAKA,kBAAkBD,KAAvB,gBACzB,EAAKxB,MAAQ,CAAEc,YAAY,GAJV,E,oDAOnB,WACEtC,KAAK4B,SAAS,CAAEU,YAAY,M,+BAG9B,WACEtC,KAAK4B,SAAS,CAAEU,YAAY,M,oBAG9B,WACE,IAAMA,EAAatC,KAAKwB,MAAMc,WAC1BY,EAAS,KAMb,OAJEA,EADEZ,EACO,cAACO,EAAD,CAAc9B,QAASf,KAAKiD,oBAE5B,cAACN,EAAD,CAAa5B,QAASf,KAAK+C,mBAGpC,gCACE,cAAC,EAAD,CAAUT,WAAYA,IACrBY,S,GA3BkBhE,IAAMgB,WChBlBiD,E,4JAVb,WACE,OACE,qBAAK5F,UAAU,MAAf,SACE,kCACE,cAAC,EAAD,Y,GALQ2C,aCQHkD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdd,IAASC,OACP,cAAC,IAAMqB,WAAP,UACE,cAAC,EAAD,MAEFpB,SAASC,eAAe,SAM1BU,M","file":"static/js/main.3dd03e7b.chunk.js","sourcesContent":["\r\nimport React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignIn() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          />\r\n          <br></br><br></br>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n        <br></br><br></br>\r\n      </div>\r\n    \r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nclass TodoForm extends React.Component {\r\n  todoRef = React.createRef();\r\n\r\n  addItemOnList = e => {\r\n    e.preventDefault();\r\n    const todoItem = {\r\n      todo: this.todoRef.current.value,\r\n      isCompleted: false\r\n    };\r\n    this.props.addToDoItems(todoItem);\r\n    e.currentTarget.reset();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form id=\"todoList-form\" onSubmit={this.addItemOnList}>\r\n        <input type=\"text\" name=\"todosTxtbx\" ref={this.todoRef} required />\r\n        <button>+</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoForm;","import React from \"react\";\r\n\r\nclass TodoList extends React.Component {\r\n  handleChange = event => {\r\n    const updateTodo = {\r\n      ...this.props.todoItems,\r\n      [event.currentTarget.name]: event.currentTarget.value\r\n    };\r\n    console.log(event.currentTarget.value);\r\n    this.props.updateTodos(this.props.index, updateTodo);\r\n  };\r\n\r\n  toggleCheckbox = event => {\r\n    const updateTodo = {\r\n      ...this.props.todoItems,\r\n      [event.currentTarget.name]: event.currentTarget.checked\r\n    };\r\n    this.props.updateTodos(this.props.index, updateTodo);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <li className={this.props.todoItems.isCompleted ? \"done\" : null}>\r\n        <input\r\n          type=\"checkbox\"\r\n          name=\"isCompleted\"\r\n          checked={this.props.todoItems.isCompleted}\r\n          onChange={this.toggleCheckbox}\r\n          // checked={this.props.todoItems.isChecked}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"todo\"\r\n          value={this.props.todoItems.todo}\r\n          onChange={this.handleChange}\r\n        />\r\n        {/* <button>Edit</button> */}\r\n        <button\r\n          className=\"del-btn\"\r\n          onClick={() => this.props.removeToDoItem(this.props.index)}\r\n        >\r\n          x\r\n        </button>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TodoList;\r\n/*import React from \"react\";\r\nimport TodoListItem from \"./TodoItem\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nexport default class TodoList extends React.Component {\r\n    render() {\r\n      var items = this.props.items.map((item, index) => {\r\n        return (\r\n          <TodoListItem\r\n            key={index}\r\n            item={item}\r\n            index={index}\r\n            removeItem={this.props.removeItem}\r\n            TodoDone={this.props.TodoDone}\r\n          />\r\n        );\r\n      });\r\n      return <ul className=\"list-group\"> {items} </ul>;\r\n    }\r\n  }*/","import React, { Component } from 'react';\r\n\r\n\r\nclass Title extends Component {\r\n    render () {\r\n        return <h1 style={headerStyle}>CGU Todo list</h1>\r\n    }\r\n}\r\n\r\nconst headerStyle = {\r\n    background:\"black\",\r\n    color: \"#fff\",\r\n    textAlign: 'center',\r\n    padding: '10px'\r\n}\r\n\r\n\r\n\r\nexport default Title;","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport TodoForm from \"./todoform\";\r\nimport TodoList from \"./todolist\";\r\nimport Title from \"./title\"\r\nclass Todo extends Component {\r\n  state = {\r\n    todoItems: {}\r\n  };\r\n\r\n  addToDoItems = item => {\r\n    const items = { ...this.state.todoItems };\r\n    console.log(items);\r\n    items[`item${Date.now()}`] = item;\r\n    this.setState({\r\n      todoItems: items\r\n    });\r\n  };\r\n\r\n  removeToDoItem = item => {\r\n    const todos = { ...this.state.todoItems };\r\n    delete todos[item];\r\n    this.setState({ todoItems: todos });\r\n  };\r\n\r\n  updateTodos = (key, updatedTodo) => {\r\n    const todos = { ...this.state.todoItems };\r\n    todos[key] = updatedTodo;\r\n    this.setState({ todoItems: todos });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Title/>\r\n        <TodoForm addToDoItems={this.addToDoItems} />\r\n        <ul>\r\n          {Object.keys(this.state.todoItems).map(key => (\r\n            <TodoList\r\n              key={key}\r\n              index={key}\r\n              todoItems={this.state.todoItems[key]}\r\n              removeToDoItem={this.removeToDoItem}\r\n              updateTodos={this.updateTodos}\r\n            />\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Todo;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport SignIn from \"./SignIn\";\r\nimport Todo from \"./todoapp\";\r\n\r\nfunction UserGreeting(props) {\r\n  return   (\r\n    <div>\r\n      <h1 style={headerStyle} > Hi CGUer, please sign in.</h1>\r\n      <SignIn/>\r\n    </div>\r\n  )\r\n   \r\n}\r\nconst headerStyle = {\r\n  background:\"black\",\r\n  color: \"#fff\",\r\n  textAlign: 'center',\r\n  padding: '10px'\r\n\r\n}\r\nfunction GuestGreeting(props) {\r\n    return  (\r\n      <div>\r\n        <h1 color=\"red\"> Welcome back, CGUER!</h1>\r\n        <Todo/>\r\n      </div>\r\n    )\r\n}\r\n\r\nfunction Greeting(props) {\r\n  const isLoggedIn = props.isLoggedIn;\r\n  if (isLoggedIn) {\r\n    return <GuestGreeting />;\r\n    \r\n  } else {\r\n    return <UserGreeting />;\r\n  }\r\n}\r\nReactDOM.render(\r\n    <Greeting isLoggedIn={false} />, \r\n    document.getElementById('root')\r\n);\r\nexport default Greeting;\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Greeting from \"./greet\";\r\n\r\nfunction LoginButton(props) {\r\n  return (\r\n    <Button\r\n      onClick={props.onClick}\r\n      type=\"submit\"\r\n      variant=\"outlined\"\r\n      color=\"primary\"\r\n    >\r\n      <Link color=\"inherit\">Sign In</Link>\r\n    </Button>\r\n  );\r\n}\r\n\r\nfunction LogoutButton(props) {\r\n  return (\r\n    <Button\r\n      onClick={props.onClick}\r\n      type=\"submit\"\r\n      variant=\"outlined\"\r\n      color=\"secondary\"\r\n    >\r\n      <Link color=\"inherit\">Logout</Link>\r\n    </Button>\r\n  );\r\n}\r\n\r\nclass LoginControl extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLoginClick = this.handleLoginClick.bind(this);\r\n    this.handleLogoutClick = this.handleLogoutClick.bind(this);\r\n    this.state = { isLoggedIn: false };\r\n  }\r\n\r\n  handleLoginClick() {\r\n    this.setState({ isLoggedIn: true });\r\n  }\r\n\r\n  handleLogoutClick() {\r\n    this.setState({ isLoggedIn: false });\r\n  }\r\n\r\n  render() {\r\n    const isLoggedIn = this.state.isLoggedIn;\r\n    let button = null;\r\n    if (isLoggedIn) {\r\n      button = <LogoutButton onClick={this.handleLogoutClick} />;\r\n    } else {\r\n      button = <LoginButton onClick={this.handleLoginClick} />;\r\n    }\r\n    return (\r\n      <div>\r\n        <Greeting isLoggedIn={isLoggedIn} />\r\n        {button}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginControl;\r\n","import React, { Component } from \"react\";\r\nimport LoginControl from \"./loginControl\";\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <section>\r\n          <LoginControl />\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}